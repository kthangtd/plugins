group 'io.flutter.plugins.videoplayer'
version '1.0-SNAPSHOT'
def args = ["-Xlint:deprecation", "-Xlint:unchecked"]//, "-Werror"]

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
        classpath 'com.google.android.gms:strict-version-matcher-plugin:1.2.2'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url  'https://artifacts.bitmovin.com/artifactory/public-releases'
        }
    }
}

project.getTasks().withType(JavaCompile) {
    options.compilerArgs.addAll(args)
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 16
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        disable 'InvalidPackage'
        disable 'GradleDependency'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    dependencies {
        implementation "com.google.android.exoplayer:exoplayer:2.14.1"
//        implementation 'com.google.android.exoplayer:exoplayer-core:2.14.1'
//        implementation 'com.google.android.exoplayer:exoplayer-hls:2.14.1'
//        implementation 'com.google.android.exoplayer:exoplayer-ui:2.14.1'
        compileOnly 'org.checkerframework:checker-qual:3.13.0'
        compileOnly 'org.checkerframework:checker-compat-qual:2.5.5'

        testImplementation 'junit:junit:4.12'
        testImplementation 'org.mockito:mockito-inline:3.9.0'

        // The library adds the IMA ExoPlayer integration for ads.
        implementation 'com.google.android.exoplayer:extension-ima:2.14.1'

        // bitmovin analytics
        implementation 'com.bitmovin.analytics:collector-exoplayer:2.6.2'
    }


    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}
